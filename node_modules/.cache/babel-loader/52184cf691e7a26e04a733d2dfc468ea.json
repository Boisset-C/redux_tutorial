{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state = state.counter + action.amount;\n    }\n\n  }\n});\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nexport const INCREMENT = \"increment\";\nexport const DECREMENT = \"decrement\";\nexport const INCREASE = \"increase\";\nexport const TOGGLE = \"toggle\";\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === INCREASE) {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === DECREMENT) {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === TOGGLE) {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/home/cosmicwanderer/react_projects/redux_tutorial/src/store/index.js"],"names":["createStore","createSlice","name","initialState","reducers","increment","state","counter","decrement","increase","action","amount","showCounter","INCREMENT","DECREMENT","INCREASE","TOGGLE","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEAA,WAAW,CAAC;AACVC,EAAAA,IAAI,EAAE,SADI;AAEVC,EAAAA,YAFU;AAGVC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACC,OAAN;AACD,KAHO;;AAIRC,IAAAA,SAAS,CAACF,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACC,OAAN;AACD,KANO;;AAORE,IAAAA,QAAQ,CAACH,KAAD,EAAQI,MAAR,EAAgB;AACtBJ,MAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,GAAgBG,MAAM,CAACC,MAA/B;AACD;;AATO;AAHA,CAAD,CAAX;AAgBA,MAAMR,YAAY,GAAG;AAAEI,EAAAA,OAAO,EAAE,CAAX;AAAcK,EAAAA,WAAW,EAAE;AAA3B,CAArB;AACA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;;AAEP,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCX,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXO,MAAW;;AACvD,MAAIA,MAAM,CAACQ,IAAP,KAAgBL,SAApB,EAA+B;AAC7B,WAAO;AACLN,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB,CADpB;AAELK,MAAAA,WAAW,EAAEN,KAAK,CAACM;AAFd,KAAP;AAID;;AAED,MAAIF,MAAM,CAACQ,IAAP,KAAgBH,QAApB,EAA8B;AAC5B,WAAO;AACLR,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgBG,MAAM,CAACC,MAD3B;AAELC,MAAAA,WAAW,EAAEN,KAAK,CAACM;AAFd,KAAP;AAID;;AAED,MAAIF,MAAM,CAACQ,IAAP,KAAgBJ,SAApB,EAA+B;AAC7B,WAAO;AACLP,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB,CADpB;AAELK,MAAAA,WAAW,EAAEN,KAAK,CAACM;AAFd,KAAP;AAID;;AAED,MAAIF,MAAM,CAACQ,IAAP,KAAgBF,MAApB,EAA4B;AAC1B,WAAO;AACLT,MAAAA,OAAO,EAAED,KAAK,CAACC,OADV;AAELK,MAAAA,WAAW,EAAE,CAACN,KAAK,CAACM;AAFf,KAAP;AAID;;AACD,SAAON,KAAP;AACD,CA7BD;;AA+BA,MAAMa,KAAK,GAAGnB,WAAW,CAACiB,cAAD,CAAzB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state = state.counter + action.amount;\n    },\n  },\n});\n\nconst initialState = { counter: 0, showCounter: true };\nexport const INCREMENT = \"increment\";\nexport const DECREMENT = \"decrement\";\nexport const INCREASE = \"increase\";\nexport const TOGGLE = \"toggle\";\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === INCREASE) {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === DECREMENT) {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === TOGGLE) {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter,\n    };\n  }\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}